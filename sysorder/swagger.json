{
  "openapi": "3.0.1",
  "info": {
    "title": "Category / Order API",
    "description": "This is the Order and Category API.  You can find the resources and examples.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "category",
      "description": "CRUD about Categories"
    },
    {
      "name": "order",
      "description": "CRUD about Orders"
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Get list of categories",
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "Category founded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Categories not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Create a category",
        "operationId": "createCategory",
        "requestBody": {
          "description": "Category object that needs to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Get a specific category",
        "operationId": "getSpecificCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "category id that need to be updated",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category founded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Update an existing category",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "category id that need to be updated",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Category object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "Delete an existing category",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "category id that need to be updated",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted successfully",
            "content": {}
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get list of orders",
        "operationId": "getOrders",
        "responses": {
          "200": {
            "description": "Orders founded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Categories not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Create an order",
        "operationId": "createOrder",
        "requestBody": {
          "description": "Order object that needs to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get a specific order",
        "operationId": "getSpecificOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "order id that need to be updated",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order founded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "order"
        ],
        "summary": "Update an existing order",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "order id that need to be updated",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Category object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "order"
        ],
        "summary": "Delete an existing order",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "order id that need to be updated",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted successfully",
            "content": {}
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "desc": {
            "type": "string"
          }
        }
      },
      "CategoryRequest": {
        "type": "object",
        "properties": {
          "desc": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "contactName": {
            "type": "string"
          },
          "contactPhone": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "realEstateAgency": {
            "type": "string"
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        }
      },
      "OrderRequest": {
        "type": "object",
        "properties": {
          "contactName": {
            "type": "string"
          },
          "contactPhone": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "realEstateAgency": {
            "type": "string"
          },
          "deadline": {
            "type": "string",
            "format": "date"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}